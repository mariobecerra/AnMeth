setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos')
basket = read.csv('./Notas LuisFe/clase_1_mbasket/datos/srep00196-s3.csv')
library(dplyr)
library(tidyr)
typeof(basket)
seq_along(basket)
region<- unique(basket[,1])
region
region <-as(region,'list')
region
basket$id <- 1:nrow(basket)
head(basket)
basket.long <- basket %>%
gather(key=numing,value=ing,a1:a32) %>%
select(-numing) %>%
filter(ing!='') %>%
arrange(region,id,ing)
basket.long <- basket %>%
gather(key=numing,value=ing,a1:a32) %>%
select(-numing) %>%
filter(ing!='') %>%
arrange(region,id,ing)
basket.long <- basket %>%
gather(key=numing,value=ing,a1:a30) %>%
select(-numing) %>%
filter(ing!='') %>%
arrange(region,id,ing)
head(basket.long)
reg1<- filter(basket.long,basket.long[1] =="African")[2:3]
reg2<- filter(basket.long,basket.long[1] =="EastAsian")[2:3]
reg3<- filter(basket.long,basket.long[1] =="EasternEuropean")[2:3]
reg4<- filter(basket.long,basket.long[1] =="LatinAmerican")[2:3]
reg5<- filter(basket.long,basket.long[1] =="MiddleEastern")[2:3]
reg6<- filter(basket.long,basket.long[1] =="NorthAmerican")[2:3]
reg7<- filter(basket.long,basket.long[1] =="NorthernEuropean")[2:3]
reg8<- filter(basket.long,basket.long[1] =="SouthAsian")[2:3]
reg9<- filter(basket.long,basket.long[1] =="SoutheastAsian")[2:3]
reg10<- filter(basket.long,basket.long[1] =="SouthernEuropean")[2:3]
reg11<- filter(basket.long,basket.long[1] =="WesternEuropean")[2:3]
head(basket.long[1])
head(basket.long[1])
head(basket.long)
head(reg11)
reg1$id
baskets.lista <- lapply(unique(reg1$id), function(i){ filter(reg1, reg1$id==i)$ing})
baskets.lista[1:3]
transac <- as(baskets.lista, 'transactions')
?baskets
transac <- as(baskets.lista, 'transactions')
?as(baskets)
reg1
?apriori
library(ggplot2)
library(plyr)
library(dplyr)
?apriori
library(arules)
transac <- as(baskets.lista, 'transactions')
transac
itemFrequency(transac) %>% sort %>% tail(20)
library(knitr)
getwd()
knit('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket.Rmd', '/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket.R', tangle=T)
knit('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/1_market_basket.Rmd', '/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket.R', tangle=T)
knit('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket/1_market_basket.Rmd', '/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket/1_mbasket.R', tangle=T)
library(ggplot2)
library(stringr)
library(reshape2)
library(igraph)
library(dplyr)
library(tidyr)
s <- sample(1:7, 5)
x <- lapply(s, function(i) as.integer(intToBits(i))[1:3])
x
## ------------------------------------------------------------------------
items <- c('camisa','pantalón','chamarra')
lapply(x, function(t){ items[t==1]   })
## ----, echo=FALSE--------------------------------------------------------
combs <- expand.grid(p=c(0,1), c=c(0,1), ch=c(0,1))
set.seed(280)
probs <- combs
x <-  c(0,rpois(7,4)^2)
probs$prob <- round(x/sum(x),3)
## ------------------------------------------------------------------------
probs
p.pantalon <- sum(filter(probs, p==1)$prob)
p.pantalon
p.pyc <- sum(filter(probs, p == 1 & c == 1)$prob)
p.pyc
p.pyc/p.pantalon
p.pantalon <- sum(filter(probs, p==1)$prob)
p.pantalon
p.pyc <- sum(filter(probs, p == 1 & c == 1)$prob)
p.pyc
p.pyc/p.pantalon
source('~/Dropbox/ITAM_Dropbox/Métodos Analíticos/Notas LuisFe/clase_1_mbasket/1_mbasket.R', echo=TRUE)
library(utils)
contar_pares <- function(archivo){
pares <- lapply(seq_along(items), function(i) {
temp <- lapply(seq_along(items[items > items[i]]), function(j) 0)
names(temp) <- items[items > items[i]]
temp
})
names(pares) <- items
con <- file(archivo,'r')
linea <- readLines(con, 1)
items_lista <- list()
while(length(linea) > 0){
items.leer <- strsplit(linea, ',', fixed = TRUE)[[1]]
## calcular pares de canasta actual
if(length(items.leer)>1){
pares_canasta <- combn(items.leer, m=2, simplify=FALSE)
for(par in pares_canasta){
par <- sort(par)
pares[[par[1]]][[par[2]]] <- pares[[par[1]]][[par[2]]] + 1
}
}
linea <- readLines(con, 1)
}
close(con)
pares
}
system.time(xx <- contar_pares('salida.dat'))
## ------------------------------------------------------------------------
library(arules)
head(baskets)
baskets <- lapply(seq_along(lista.mb), function(i){
data.frame(basket.id = i,  items = lista.mb[[i]])}) %>%
rbind_all
library(arules)
data(Groceries)
lista.mb <- as(Groceries, 'list')
lista.mb[[1]]
lista.mb[[2]]
## ------------------------------------------------------------------------
baskets <- lapply(seq_along(lista.mb), function(i){
data.frame(basket.id = i,  items = lista.mb[[i]])}) %>%
rbind_all
baskets
item.frec <- baskets %>%
group_by(items) %>%
summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
subset(item.frec, p > 0.025)
## ----setup, include=FALSE------------------------------------------------
options(digits=2)
library(ggplot2)
library(stringr)
library(reshape2)
library(igraph)
library(dplyr)
library(tidyr)
## ------------------------------------------------------------------------
s <- sample(1:7, 5)
x <- lapply(s, function(i) as.integer(intToBits(i))[1:3])
x
## ------------------------------------------------------------------------
items <- c('camisa','pantalón','chamarra')
lapply(x, function(t){ items[t==1]   })
## ----, echo=FALSE--------------------------------------------------------
combs <- expand.grid(p=c(0,1), c=c(0,1), ch=c(0,1))
set.seed(280)
probs <- combs
x <-  c(0,rpois(7,4)^2)
probs$prob <- round(x/sum(x),3)
## ------------------------------------------------------------------------
probs
## ------------------------------------------------------------------------
library(dplyr)
p.pantalon <- sum(filter(probs, p==1)$prob)
p.pantalon
p.pyc <- sum(filter(probs, p == 1 & c == 1)$prob)
p.pyc
p.pyc/p.pantalon
library(arules)
data(Groceries)
lista.mb <- as(Groceries, 'list')
lista.mb[[1]]
lista.mb[[2]]
baskets <- lapply(seq_along(lista.mb), function(i){
data.frame(basket.id = i,  items = lista.mb[[i]])}) %>%
rbind_all
baskets %>%
group_by(basket.id) %>%
summarise(margarina = any(items == 'margarine')) %>%
ungroup() %>%
summarise( prop.margarina = sum(margarina)/length(unique(basket.id)))
length(unique(baskets$basket.id))
baskets %>%
group_by(basket.id) %>%
summarise(margarina = any(items == 'margarine')) %>%
ungroup() %>%
summarise( prop.margarina = sum(margarina)/length(unique(basket.id)))
baskets %>%
group_by(basket.id) %>%
summarise(margarina = any(items == 'margarine')) %>%
ungroup() %>%
summarise( prop.margarina = sum(margarina)/length(unique(baskets$basket.id)))
item.frec <- baskets %>%
group_by(items) %>%
summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
item.frec <- baskets %>%
group_by(items) %>%
summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
subset(item.frec, p > 0.025)
baskets %>%
group_by(basket.id) %>%
summarise(margarina = any(items == 'margarine')) %>%
ungroup() %>%
summarise( prop.margarina = sum(margarina)/length(unique(baskets$basket.id)))
## ------------------------------------------------------------------------
ejemplo.2 <- baskets %>%
group_by(basket.id) %>%
summarise(combo.1 = all('butter' %in%items, 'white bread'%in%items)) %>%
ungroup() %>%
summarise( prop.1 = sum(combo.1)/length(combo.1))
ejemplo.2
## ------------------------------------------------------------------------
item.frec <- baskets %>%
group_by(items) %>%
summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
library(dplyr)
item.frec <- baskets %>%
group_by(items) %>%
summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
item.frec <- baskets %>%
group_by(items) %>%
dplyr::summarise(frec = n()) %>%
ungroup() %>%
mutate(p = frec / length(unique(baskets$basket.id))) %>%
arrange(desc(frec))
baskets.2 <- baskets %>% rename(items.2 = items)
baskets.2 <- baskets %>% rename(items.2 = items)
detach(plyr)
detach("package:plyr")
baskets.2 <- baskets %>% rename(items.2 = items)
tabla.pares <- baskets %>% inner_join(baskets.2)
tab.2 <- tabla.pares %>% group_by(items, items.2) %>%
tally() %>% ungroup() %>% arrange(desc(n)) %>%
mutate(p = n / length(unique(baskets$basket.id)))
tab.2
## ------------------------------------------------------------------------
tab.2 %>% filter(items!=items.2)
## ------------------------------------------------------------------------
tab.2 %>% filter(items > items.2)
## ------------------------------------------------------------------------
library(pryr)
object_size(item.frec)
baskets.3 <- baskets %>% rename(items.3 = items)
system.time(tabla.trios <- left_join(tabla.pares, baskets.3))
object_size(tabla.trios)
baskets.4 <- baskets %>% rename(items.4 = items)
system.time(tabla.4<- left_join(tabla.trios, baskets.4))
object_size(tabla.4)
lista.mb[[1]]
res <- lapply(seq_along(lista.mb), function(i){
write(paste(lista.mb[[i]], collapse=','), file ='salida.dat',append=T)
})
con <- file('salida.dat','r')
readLines(con, 1)
readLines(con, 1)
close(con)
detach("package:arules", unload=TRUE)
contar_1_txt <- "
contar_1 <- function(archivo){
conteo <- list()
con <- file(archivo,'r')
linea <- readLines(con, 1)
items_lista <- list()
while(length(linea) > 0){
items.leer <- strsplit(linea, ',', fixed = TRUE)[[1]]
existe <- items.leer %in% names(conteo)
items.existe <- items.leer[existe]
items.nuevos <- items.leer[!existe]
if(length(items.existe) > 0)
conteo[items.existe] <- as.integer(conteo[items.existe])  + 1
if(length(items.nuevos) > 0)
conteo[items.nuevos] <-  1
linea <- readLines(con, 1)
}
close(con)
conteo
}
"
pares <- lapply(seq_along(items), function(i) {
temp <- lapply(seq_along(items[items > items[i]]), function(j) 0)
names(temp) <- items[items > items[i]]
temp
})
names(pares) <- items
pares[['whole milk']][1:2]
pares[['soda']][['whole milk']]
pares[['whole milk']][['soda']]
library(arules)
head(baskets)
baskets.lista <- lapply(unique(baskets$basket.id), function(i){ filter(baskets, basket.id==i)$items})
baskets.lista[1:3]
transac <- as(baskets.lista, 'transactions')
transac
?transactions
itemFrequency(transac) %>% sort
ap.1 <- apriori(transac,
parameter = list(supp = 0.01, target='frequent itemsets'))
ap.1
options(digits=2)
setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos')
library(ggplot2)
library(dplyr)
library(arules)
datos <- read.csv('./Notas LuisFe/clase_1_mbasket/datos/srep00196-s3.csv')
load(file='./Tareas/Tarea02_baskets.RData')
load(file='./Tareas_Git/Tarea_02/Tarea02_baskets.RData')
head(baskets, 10)
transac <- as(baskets.lista, 'transactions')
transac
ap.1 <- apriori(transac,
parameter = list(supp = 0.01, target='frequent itemsets'))
ap.1
tail(unique(baskets$id))
head(baskets)
count(unique(baskets$ing))
length(unique(baskets$ing))
ap.1
inspect(sort(ap.1, by='support')[1:30])
baskets_african<-baskets[baskets$region=='African',c(1,3)]
write.table(baskets_african, file='./Tareas/baskets_african.csv', sep=',', row.names=FALSE)
write.table(baskets_african, file='./Tareas/Tareas_Git/baskets_african.csv', sep=',', row.names=FALSE)
baskets_african<-baskets[baskets$region=='African',c(1,3)]
write.table(baskets_african, file='./Tareas_Git/Tarea_02/baskets_african.csv', sep=',', row.names=FALSE)
?read.tranactions
?read.transactions
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single', cols=c(1,3), sep=',', encoding='utf8')
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single', cols=c(1,3))
transac_african
transac
?filter
head(baskets_african)
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single')
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single', cols=c(1,2))
transac_african
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single', cols=c(1,2), sep=',')
transac_african
itemFrequency(transac_african) %>% sort
ap.1 <- apriori(transac_african, parameter = list(minlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
itemFrequency(transac_african) %>% sort
source('~/.active-rstudio-document', echo=TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos')
transac_african <- read.transactions('./Tareas_Git/Tarea_02/baskets_african.csv', format='single', cols=c(1,2), sep=',')
library(knitr)
?knit2html
?opt_kint
?opt_knit
?opts_knit
getwd()
setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Tareas_Git/Tarea_02')
datos <- read.csv('../../Notas LuisFe/clase_1_mbasket/datos/srep00196-s3.csv')
setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Tareas_Git/Tarea_02')
head(baskets)
levels(baskets$region)
baskets_african<-baskets[baskets$region=='LatinAmerican',c(1,3)]
write.table(baskets_african, file='./Tareas_Git/Tarea_02/baskets_latinamerica.csv', sep=',', row.names=FALSE)
write.table(baskets_african, file='./baskets_latinamerica.csv', sep=',', row.names=FALSE)
baskets_african
baskets_american<-baskets[baskets$region=='LatinAmerican',c(1,3)]
as(baskets_american, transactions)
library(arules)
as(baskets_american, transactions)
as(baskets_american, 'transactions')
levels(baskets$region)
baskets_american<-baskets[baskets$region=='African',c(1,3)]
write.table(baskets_african, file='./baskets_African.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='LatinAmerican',c(1,3)]
write.table(baskets_african, file='./baskets_LatinAmerican.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='EastAsian',c(1,3)]
write.table(baskets_african, file='./baskets_EastAsian.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='EasternEuropean',c(1,3)]
write.table(baskets_african, file='./baskets_EasternEuropean.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='MiddleEastern',c(1,3)]
write.table(baskets_african, file='./baskets_MiddleEastern.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='NorthAmerican',c(1,3)]
write.table(baskets_african, file='./baskets_NorthAmerican.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='NorthernEuropean',c(1,3)]
write.table(baskets_african, file='./baskets_NorthernEuropean.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='SouthAsian',c(1,3)]
write.table(baskets_african, file='./baskets_SouthAsian.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='SoutheastAsian',c(1,3)]
write.table(baskets_african, file='./baskets_SoutheastAsian.csv', sep=',', row.names=FALSE
baskets_american<-baskets[baskets$region=='SouthernEuropean',c(1,3)]
write.table(baskets_african, file='./baskets_SouthernEuropean.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='WesternEuropean',c(1,3)]
write.table(baskets_african, file='./baskets_WesternEuropean.csv', sep=',', row.names=FALSE)
baskets_american<-baskets[baskets$region=='WesternEuropean',c(1,3)]
write.table(baskets_african, file='./baskets_WesternEuropean.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='African',c(1,3)], file='./baskets_African.csv', sep=',', row.names=FALSE)
write.tablebaskets[baskets$region=='LatinAmerican',c(1,3)], file='./baskets_LatinAmerican.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='EastAsian',c(1,3)], file='./baskets_EastAsian.csv', sep=',', row.names=FALSE)
write.tablebaskets[baskets$region=='LatinAmerican',c(1,3)], file='./baskets_LatinAmerican.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='African', c(1,3)], file='./baskets_African.csv', sep=',', row.names=FALSE)
write.tablebaskets[baskets$region=='LatinAmerican', c(1,3)], file='./baskets_LatinAmerican.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='LatinAmerican', c(1,3)], file='./baskets_LatinAmerican.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='EastAsian',c(1,3)], file='./baskets_EastAsian.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='EasternEuropean',c(1,3)], file='./baskets_EasternEuropean.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='MiddleEastern',c(1,3)], file='./baskets_MiddleEastern.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='NorthAmerican',c(1,3)], file='./baskets_NorthAmerican.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='NorthernEuropean',c(1,3)], file='./baskets_NorthernEuropean.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='SouthAsian',c(1,3)], file='./baskets_SouthAsian.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='SoutheastAsian',c(1,3)], file='./baskets_SoutheastAsian.csv', sep=',', row.names=FALSE
)
write.table(baskets[baskets$region=='SouthernEuropean',c(1,3)], file='./baskets_SouthernEuropean.csv', sep=',', row.names=FALSE)
write.table(baskets[baskets$region=='WesternEuropean',c(1,3)], file='./baskets_WesternEuropean.csv', sep=',', row.names=FALSE)
transac_LA <- read.transactions('./baskets_LatinAmerican.csv', format='single', cols=c(1,2), sep=',')
itemFrequency(transac_LA) %>% sort
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
rules.1 <- apriori(transac_LA,
parameter = list(supp = 0.01, confidence=0.20, target='rules'))
library(ggplot2)
library(arules)
library(dplyr)
setwd('/home/mbc/Dropbox/ITAM_Dropbox/Métodos Analíticos/Tareas_Git/Tarea_02')
transac_LA <- read.transactions('./baskets_LatinAmerican.csv', format='single', cols=c(1,2), sep=',')
itemFrequency(transac_LA) %>% sort
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
itemFrequency(transac_LA) %>% sort
rules.1 <- apriori(transac_LA,
parameter = list(supp = 0.01, confidence=0.20, target='rules'))
rules.1
inspect(sort(rules.1, by='confidence')[1:20])
?inspect
rules.2 <- apriori(transac,
parameter = list(support = 0.02, confidence=0.01, target='rules', ext =TRUE))
inspect(sort(rules.1, by='lift')[1:20])
rules.2 <- apriori(transac_LA,
parameter = list(support = 0.02, confidence=0.01, target='rules', ext =TRUE))
inspect(sort(rules.2, by='lift')[1:20])
(itemFrequency(transac_LA) %>% sort)[0:50]
(itemFrequency(transac_LA) %>% sort)[20]
(itemFrequency(transac_LA) %>% sort)[0:20]
inspect(sort(ap.1, by='support')[1:30])
ap.1 <- apriori(transac_LA, parameter = list(minlen=2, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
ap.1 <- apriori(transac_LA, parameter = list(minlen=3, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
(itemFrequency(transac_LA) %>% sort)[0:20]
ap.1 <- apriori(transac_LA, parameter = list(minlen=2, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
?apriori
ap.1 <- apriori(transac_LA, parameter = list(minlen=2, maxlen=2, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
ap.2 <- apriori(transac_LA, parameter = list(minlen=3, maxlen=3, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
inspect(sort(ap.2, by='support')[1:30])
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, maxlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, maxlen=2, target='frequent itemsets'))
inspect(sort(ap.1, by='support')[1:30])
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, maxlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='support')
)
?inspect
ap.1 <- apriori(transac_LA, parameter = list(minlen=1, maxlen=1, target='frequent itemsets'))
inspect(sort(ap.1, by='frequent itemsets'))
summary(transac_LA)
inspect(sort(ap.1, by='support'))
(itemFrequency(transac_LA) %>% sort)[0:20]
transactions
trans_LA
transac_LA
summary(transac_LA)
inspect(sort(ap.3, by='support')[1:30])
ap.3 <- apriori(transac_LA, parameter = list(minlen=3, maxlen=3, target='frequent itemsets'))
inspect(sort(ap.3, by='support')[1:30])
rules.1 <- apriori(transac_LA,
parameter = list(support = 0.01, confidence=0.20, target='rules'))
inspect(sort(rules.1, by='confidence')[1:20])
inspect(sort(rules.1, by='lift')[1:20])
rules.tequila <- subset(rules.1, lift>1 & lhs %pin% 'tequila' )
inspect(reglas.tequila)
inspect(rules.tequila)
rules.cheese <- subset(rules.1, lift>1 & lhs %pin% 'cheese' )
inspect(rules.cheese)
(inspect(rules.cheese))[0:20]
inspect(rules.cheese)[0:20]
inspect(rules.cheese[0:20])
inspect(sort(rules.cheese, by='lift')[0:20])
?subset
?%pin%
?pin
library(arulesViz)
inspect(rules.1)
rules <- apriori(transac_LA,
parameter = list(support = 0.01, confidence=0.01, minlen=2,maxlen=2,
target='rules', ext=TRUE))
